[github]
  user = Yasumoto

[user]
  name = Joe Smith
  email = yasumoto7@gmail.com
  signingkey = 14FA88BD7850A541

[alias]
  # View the SHA, description, and history graph of the latest 20 commits
  l = log --pretty=oneline -n 20 --graph
  # View the current working tree status using the short format
  s = status -s

[apply]
  whitespace = fix

# The colors, duke!
[color]
  ui = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[core]
  # Also needed for whitespace
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
  excludesfile = /Users/joe/.gitignore

# Templatize for macOS eventually
#[diff]
#  guitool = Kaleidoscope
#
#[difftool "Kaleidoscope"]
#  cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
#
#[merge]
#  tool = Kaleidoscope
#
#[mergetool "Kaleidoscope"]
#  cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" \"$REMOTE\"
#
#[credential]
#  helper = osxkeychain

# https://github.com/dandavison/delta
[pager]
  diff = delta
  log = delta
  reflog = delta
  show = delta

[interactive]
  diffFilter = delta --color-only --features=interactive

[delta]
  features = decorations

[delta "interactive"]
  keep-plus-minus-markers = false

[delta "decorations"]
  commit-decoration-style = blue ol
  commit-style = raw
  file-style = omit
  hunk-header-decoration-style = blue box
  hunk-header-file-style = red
  hunk-header-line-number-style = "#067a00"
  hunk-header-style = file line-number syntax

[branch]
  #tells git-branch and git-checkout to setup new branches so that git-pull(1)
  #will appropriately merge from that remote branch.  Recommended.  Without this,
  #you will have to add --track to your branch command or manually merge remote
  #tracking branches with "fetch" and then "merge".
  autosetupmerge = true

# Always use origin as the default remote for master.
[branch "master"]
  remote = origin
  merge = refs/heads/master

[filter "media"]
  clean = git media clean %f
  smudge = git media smudge %f
  required = true

[push]
  default = current

[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true

[includeIf "gitdir:~/src/"]
  path = ~/src/.gitconfig_include

[pull]
  ff = only
[init]
	defaultBranch = main
